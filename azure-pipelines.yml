name: $(BuildID)-$(Build.SourceBranchName)

pool:
  vmImage: "ubuntu-latest"
variables: 
  ${{ if notIn(variables['Build.SourceBranchName'], 'master') }}:
    buildImage: false
    deployService: false
    deployEnvironment: 'no'
    imageTags: 'no'
    serviceName: 'no'

  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    buildImage: true
    deployService: true
    deployEnvironment: production
    imageTags: |
      $(Build.BuildId)
      latest
    apiServiceName: schedule-rtu_api
    refreshInvokerServiceName: schedule-rtu_refresh_invoker
    proxyServiceName: schedule-rtu_proxy

stages:
- stage: dockerImage
  condition: and(succeeded(), ${{variables.buildImage}})
  jobs:
  - job: dockerBuild
    strategy:
      matrix:
        api:
          imageName: rtuitlab/schedule-rtu-api
          buildContext: './'
        refresh_invoker:
          imageName: rtuitlab/schedule-rtu-refresh-invoker
          buildContext: './refresh_invoker'
        proxy:
          imageName: rtuitlab/schedule-rtu-proxy
          buildContext: './proxy'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'rtuitlab connection by admin'
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: '$(buildContext)/Dockerfile'
        buildContext: '$(buildContext)'
        tags: |
          $(Build.BuildId)
          latest
- stage: UpdateServices
  condition: and(succeeded(), ${{variables.deployService}})
  jobs:
  - deployment: DeployApi
    pool:
      vmImage: 'ubuntu-latest'
    environment: ${{variables.deployEnvironment}}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: SSH@0
              inputs:
                sshEndpoint: 'swarm manager'
                runOptions: 'commands'
                commands: 'docker service update --image rtuitlab/schedule-rtu-api:$(Build.BuildId) ${{variables.apiServiceName}} --with-registry-auth'
                readyTimeout: '20000'
  - deployment: DeployRefreshInvoker
    pool:
      vmImage: 'ubuntu-latest'
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: SSH@0
              inputs:
                sshEndpoint: 'swarm manager'
                runOptions: 'commands'
                commands: 'docker service update --image rtuitlab/schedule-rtu-refresh-invoker:$(Build.BuildId) ${{variables.refreshInvokerServiceName}} --with-registry-auth'
                readyTimeout: '20000'
  - deployment: DeployProxy
    pool:
      vmImage: 'ubuntu-latest'
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: SSH@0
              inputs:
                sshEndpoint: 'swarm manager'
                runOptions: 'commands'
                commands: 'docker service update --image rtuitlab/schedule-rtu-proxy:$(Build.BuildId) ${{variables.proxyServiceName}} --with-registry-auth'
                readyTimeout: '20000'
